/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-08-03 17:34:38 UTC)
 * on 2015-09-21 at 15:56:49 UTC 
 * Modify at your own risk.
 */

package com.appspot.englishsharing_1041.helloworld;

/**
 * Service definition for Helloworld (v2).
 *
 * <p>
 * Helloworld API v1.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link HelloworldRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Helloworld extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the helloworld library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://englishsharing-1041.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "helloworld/v2/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Helloworld(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Helloworld(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Greetings collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Helloworld helloworld = new Helloworld(...);}
   *   {@code Helloworld.Greetings.List request = helloworld.greetings().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Greetings greetings() {
    return new Greetings();
  }

  /**
   * The "greetings" collection of methods.
   */
  public class Greetings {

    /**
     * Create a request for the method "greetings.addFeedback".
     *
     * This request holds the parameters needed by the helloworld server.  After setting any optional
     * parameters, call the {@link AddFeedback#execute()} method to invoke the remote operation.
     *
     * @param author
     * @param feedback
     * @return the request
     */
    public AddFeedback addFeedback(java.lang.String author, java.lang.String feedback) throws java.io.IOException {
      AddFeedback result = new AddFeedback(author, feedback);
      initialize(result);
      return result;
    }

    public class AddFeedback extends HelloworldRequest<com.appspot.englishsharing_1041.helloworld.model.HelloGreeting> {

      private static final String REST_PATH = "add_feedback";

      /**
       * Create a request for the method "greetings.addFeedback".
       *
       * This request holds the parameters needed by the the helloworld server.  After setting any
       * optional parameters, call the {@link AddFeedback#execute()} method to invoke the remote
       * operation. <p> {@link
       * AddFeedback#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param author
       * @param feedback
       * @since 1.13
       */
      protected AddFeedback(java.lang.String author, java.lang.String feedback) {
        super(Helloworld.this, "GET", REST_PATH, null, com.appspot.englishsharing_1041.helloworld.model.HelloGreeting.class);
        this.author = com.google.api.client.util.Preconditions.checkNotNull(author, "Required parameter author must be specified.");
        this.feedback = com.google.api.client.util.Preconditions.checkNotNull(feedback, "Required parameter feedback must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AddFeedback setAlt(java.lang.String alt) {
        return (AddFeedback) super.setAlt(alt);
      }

      @Override
      public AddFeedback setFields(java.lang.String fields) {
        return (AddFeedback) super.setFields(fields);
      }

      @Override
      public AddFeedback setKey(java.lang.String key) {
        return (AddFeedback) super.setKey(key);
      }

      @Override
      public AddFeedback setOauthToken(java.lang.String oauthToken) {
        return (AddFeedback) super.setOauthToken(oauthToken);
      }

      @Override
      public AddFeedback setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddFeedback) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddFeedback setQuotaUser(java.lang.String quotaUser) {
        return (AddFeedback) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddFeedback setUserIp(java.lang.String userIp) {
        return (AddFeedback) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String author;

      /**

       */
      public java.lang.String getAuthor() {
        return author;
      }

      public AddFeedback setAuthor(java.lang.String author) {
        this.author = author;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String feedback;

      /**

       */
      public java.lang.String getFeedback() {
        return feedback;
      }

      public AddFeedback setFeedback(java.lang.String feedback) {
        this.feedback = feedback;
        return this;
      }

      @Override
      public AddFeedback set(String parameterName, Object value) {
        return (AddFeedback) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "greetings.addQuestion".
     *
     * This request holds the parameters needed by the helloworld server.  After setting any optional
     * parameters, call the {@link AddQuestion#execute()} method to invoke the remote operation.
     *
     * @param question
     * @param original
     * @param verb
     * @param hint
     * @param author
     * @return the request
     */
    public AddQuestion addQuestion(java.lang.String question, java.lang.String original, java.lang.Long verb, java.lang.String hint, java.lang.String author) throws java.io.IOException {
      AddQuestion result = new AddQuestion(question, original, verb, hint, author);
      initialize(result);
      return result;
    }

    public class AddQuestion extends HelloworldRequest<com.appspot.englishsharing_1041.helloworld.model.HelloGreeting> {

      private static final String REST_PATH = "add_question";

      /**
       * Create a request for the method "greetings.addQuestion".
       *
       * This request holds the parameters needed by the the helloworld server.  After setting any
       * optional parameters, call the {@link AddQuestion#execute()} method to invoke the remote
       * operation. <p> {@link
       * AddQuestion#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param question
       * @param original
       * @param verb
       * @param hint
       * @param author
       * @since 1.13
       */
      protected AddQuestion(java.lang.String question, java.lang.String original, java.lang.Long verb, java.lang.String hint, java.lang.String author) {
        super(Helloworld.this, "GET", REST_PATH, null, com.appspot.englishsharing_1041.helloworld.model.HelloGreeting.class);
        this.question = com.google.api.client.util.Preconditions.checkNotNull(question, "Required parameter question must be specified.");
        this.original = com.google.api.client.util.Preconditions.checkNotNull(original, "Required parameter original must be specified.");
        this.verb = com.google.api.client.util.Preconditions.checkNotNull(verb, "Required parameter verb must be specified.");
        this.hint = com.google.api.client.util.Preconditions.checkNotNull(hint, "Required parameter hint must be specified.");
        this.author = com.google.api.client.util.Preconditions.checkNotNull(author, "Required parameter author must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AddQuestion setAlt(java.lang.String alt) {
        return (AddQuestion) super.setAlt(alt);
      }

      @Override
      public AddQuestion setFields(java.lang.String fields) {
        return (AddQuestion) super.setFields(fields);
      }

      @Override
      public AddQuestion setKey(java.lang.String key) {
        return (AddQuestion) super.setKey(key);
      }

      @Override
      public AddQuestion setOauthToken(java.lang.String oauthToken) {
        return (AddQuestion) super.setOauthToken(oauthToken);
      }

      @Override
      public AddQuestion setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddQuestion) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddQuestion setQuotaUser(java.lang.String quotaUser) {
        return (AddQuestion) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddQuestion setUserIp(java.lang.String userIp) {
        return (AddQuestion) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String question;

      /**

       */
      public java.lang.String getQuestion() {
        return question;
      }

      public AddQuestion setQuestion(java.lang.String question) {
        this.question = question;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String original;

      /**

       */
      public java.lang.String getOriginal() {
        return original;
      }

      public AddQuestion setOriginal(java.lang.String original) {
        this.original = original;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long verb;

      /**

       */
      public java.lang.Long getVerb() {
        return verb;
      }

      public AddQuestion setVerb(java.lang.Long verb) {
        this.verb = verb;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String hint;

      /**

       */
      public java.lang.String getHint() {
        return hint;
      }

      public AddQuestion setHint(java.lang.String hint) {
        this.hint = hint;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String author;

      /**

       */
      public java.lang.String getAuthor() {
        return author;
      }

      public AddQuestion setAuthor(java.lang.String author) {
        this.author = author;
        return this;
      }

      @Override
      public AddQuestion set(String parameterName, Object value) {
        return (AddQuestion) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "greetings.addUser".
     *
     * This request holds the parameters needed by the helloworld server.  After setting any optional
     * parameters, call the {@link AddUser#execute()} method to invoke the remote operation.
     *
     * @param email
     * @param name
     * @param level
     * @param completion
     * @return the request
     */
    public AddUser addUser(java.lang.String email, java.lang.String name, java.lang.Long level, java.lang.Long completion) throws java.io.IOException {
      AddUser result = new AddUser(email, name, level, completion);
      initialize(result);
      return result;
    }

    public class AddUser extends HelloworldRequest<com.appspot.englishsharing_1041.helloworld.model.HelloGreeting> {

      private static final String REST_PATH = "add_user";

      /**
       * Create a request for the method "greetings.addUser".
       *
       * This request holds the parameters needed by the the helloworld server.  After setting any
       * optional parameters, call the {@link AddUser#execute()} method to invoke the remote operation.
       * <p> {@link
       * AddUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @param name
       * @param level
       * @param completion
       * @since 1.13
       */
      protected AddUser(java.lang.String email, java.lang.String name, java.lang.Long level, java.lang.Long completion) {
        super(Helloworld.this, "GET", REST_PATH, null, com.appspot.englishsharing_1041.helloworld.model.HelloGreeting.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        this.level = com.google.api.client.util.Preconditions.checkNotNull(level, "Required parameter level must be specified.");
        this.completion = com.google.api.client.util.Preconditions.checkNotNull(completion, "Required parameter completion must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public AddUser setAlt(java.lang.String alt) {
        return (AddUser) super.setAlt(alt);
      }

      @Override
      public AddUser setFields(java.lang.String fields) {
        return (AddUser) super.setFields(fields);
      }

      @Override
      public AddUser setKey(java.lang.String key) {
        return (AddUser) super.setKey(key);
      }

      @Override
      public AddUser setOauthToken(java.lang.String oauthToken) {
        return (AddUser) super.setOauthToken(oauthToken);
      }

      @Override
      public AddUser setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddUser) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddUser setQuotaUser(java.lang.String quotaUser) {
        return (AddUser) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddUser setUserIp(java.lang.String userIp) {
        return (AddUser) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public AddUser setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public AddUser setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long level;

      /**

       */
      public java.lang.Long getLevel() {
        return level;
      }

      public AddUser setLevel(java.lang.Long level) {
        this.level = level;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long completion;

      /**

       */
      public java.lang.Long getCompletion() {
        return completion;
      }

      public AddUser setCompletion(java.lang.Long completion) {
        this.completion = completion;
        return this;
      }

      @Override
      public AddUser set(String parameterName, Object value) {
        return (AddUser) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "greetings.authed".
     *
     * This request holds the parameters needed by the helloworld server.  After setting any optional
     * parameters, call the {@link Authed#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Authed authed() throws java.io.IOException {
      Authed result = new Authed();
      initialize(result);
      return result;
    }

    public class Authed extends HelloworldRequest<com.appspot.englishsharing_1041.helloworld.model.HelloGreeting> {

      private static final String REST_PATH = "hellogreeting/authed";

      /**
       * Create a request for the method "greetings.authed".
       *
       * This request holds the parameters needed by the the helloworld server.  After setting any
       * optional parameters, call the {@link Authed#execute()} method to invoke the remote operation.
       * <p> {@link
       * Authed#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Authed() {
        super(Helloworld.this, "POST", REST_PATH, null, com.appspot.englishsharing_1041.helloworld.model.HelloGreeting.class);
      }

      @Override
      public Authed setAlt(java.lang.String alt) {
        return (Authed) super.setAlt(alt);
      }

      @Override
      public Authed setFields(java.lang.String fields) {
        return (Authed) super.setFields(fields);
      }

      @Override
      public Authed setKey(java.lang.String key) {
        return (Authed) super.setKey(key);
      }

      @Override
      public Authed setOauthToken(java.lang.String oauthToken) {
        return (Authed) super.setOauthToken(oauthToken);
      }

      @Override
      public Authed setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Authed) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Authed setQuotaUser(java.lang.String quotaUser) {
        return (Authed) super.setQuotaUser(quotaUser);
      }

      @Override
      public Authed setUserIp(java.lang.String userIp) {
        return (Authed) super.setUserIp(userIp);
      }

      @Override
      public Authed set(String parameterName, Object value) {
        return (Authed) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "greetings.deleteQuestions".
     *
     * This request holds the parameters needed by the helloworld server.  After setting any optional
     * parameters, call the {@link DeleteQuestions#execute()} method to invoke the remote operation.
     *
     * @param email
     * @param name
     * @param level
     * @param completion
     * @return the request
     */
    public DeleteQuestions deleteQuestions(java.lang.String email, java.lang.String name, java.lang.Long level, java.lang.Long completion) throws java.io.IOException {
      DeleteQuestions result = new DeleteQuestions(email, name, level, completion);
      initialize(result);
      return result;
    }

    public class DeleteQuestions extends HelloworldRequest<com.appspot.englishsharing_1041.helloworld.model.HelloQuestionCollection> {

      private static final String REST_PATH = "delete_questions";

      /**
       * Create a request for the method "greetings.deleteQuestions".
       *
       * This request holds the parameters needed by the the helloworld server.  After setting any
       * optional parameters, call the {@link DeleteQuestions#execute()} method to invoke the remote
       * operation. <p> {@link DeleteQuestions#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param email
       * @param name
       * @param level
       * @param completion
       * @since 1.13
       */
      protected DeleteQuestions(java.lang.String email, java.lang.String name, java.lang.Long level, java.lang.Long completion) {
        super(Helloworld.this, "GET", REST_PATH, null, com.appspot.englishsharing_1041.helloworld.model.HelloQuestionCollection.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        this.level = com.google.api.client.util.Preconditions.checkNotNull(level, "Required parameter level must be specified.");
        this.completion = com.google.api.client.util.Preconditions.checkNotNull(completion, "Required parameter completion must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public DeleteQuestions setAlt(java.lang.String alt) {
        return (DeleteQuestions) super.setAlt(alt);
      }

      @Override
      public DeleteQuestions setFields(java.lang.String fields) {
        return (DeleteQuestions) super.setFields(fields);
      }

      @Override
      public DeleteQuestions setKey(java.lang.String key) {
        return (DeleteQuestions) super.setKey(key);
      }

      @Override
      public DeleteQuestions setOauthToken(java.lang.String oauthToken) {
        return (DeleteQuestions) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteQuestions setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteQuestions) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteQuestions setQuotaUser(java.lang.String quotaUser) {
        return (DeleteQuestions) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteQuestions setUserIp(java.lang.String userIp) {
        return (DeleteQuestions) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public DeleteQuestions setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public DeleteQuestions setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long level;

      /**

       */
      public java.lang.Long getLevel() {
        return level;
      }

      public DeleteQuestions setLevel(java.lang.Long level) {
        this.level = level;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long completion;

      /**

       */
      public java.lang.Long getCompletion() {
        return completion;
      }

      public DeleteQuestions setCompletion(java.lang.Long completion) {
        this.completion = completion;
        return this;
      }

      @Override
      public DeleteQuestions set(String parameterName, Object value) {
        return (DeleteQuestions) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "greetings.getGreeting".
     *
     * This request holds the parameters needed by the helloworld server.  After setting any optional
     * parameters, call the {@link GetGreeting#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public GetGreeting getGreeting(java.lang.Integer id) throws java.io.IOException {
      GetGreeting result = new GetGreeting(id);
      initialize(result);
      return result;
    }

    public class GetGreeting extends HelloworldRequest<com.appspot.englishsharing_1041.helloworld.model.HelloGreeting> {

      private static final String REST_PATH = "hellogreeting/{id}";

      /**
       * Create a request for the method "greetings.getGreeting".
       *
       * This request holds the parameters needed by the the helloworld server.  After setting any
       * optional parameters, call the {@link GetGreeting#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetGreeting#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected GetGreeting(java.lang.Integer id) {
        super(Helloworld.this, "GET", REST_PATH, null, com.appspot.englishsharing_1041.helloworld.model.HelloGreeting.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetGreeting setAlt(java.lang.String alt) {
        return (GetGreeting) super.setAlt(alt);
      }

      @Override
      public GetGreeting setFields(java.lang.String fields) {
        return (GetGreeting) super.setFields(fields);
      }

      @Override
      public GetGreeting setKey(java.lang.String key) {
        return (GetGreeting) super.setKey(key);
      }

      @Override
      public GetGreeting setOauthToken(java.lang.String oauthToken) {
        return (GetGreeting) super.setOauthToken(oauthToken);
      }

      @Override
      public GetGreeting setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetGreeting) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetGreeting setQuotaUser(java.lang.String quotaUser) {
        return (GetGreeting) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetGreeting setUserIp(java.lang.String userIp) {
        return (GetGreeting) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer id;

      /**

       */
      public java.lang.Integer getId() {
        return id;
      }

      public GetGreeting setId(java.lang.Integer id) {
        this.id = id;
        return this;
      }

      @Override
      public GetGreeting set(String parameterName, Object value) {
        return (GetGreeting) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "greetings.getLeaderboard".
     *
     * This request holds the parameters needed by the helloworld server.  After setting any optional
     * parameters, call the {@link GetLeaderboard#execute()} method to invoke the remote operation.
     *
     * @param email
     * @param name
     * @param level
     * @param completion
     * @return the request
     */
    public GetLeaderboard getLeaderboard(java.lang.String email, java.lang.String name, java.lang.Long level, java.lang.Long completion) throws java.io.IOException {
      GetLeaderboard result = new GetLeaderboard(email, name, level, completion);
      initialize(result);
      return result;
    }

    public class GetLeaderboard extends HelloworldRequest<com.appspot.englishsharing_1041.helloworld.model.HelloUserCollection> {

      private static final String REST_PATH = "get_leaderboard";

      /**
       * Create a request for the method "greetings.getLeaderboard".
       *
       * This request holds the parameters needed by the the helloworld server.  After setting any
       * optional parameters, call the {@link GetLeaderboard#execute()} method to invoke the remote
       * operation. <p> {@link GetLeaderboard#initialize(com.google.api.client.googleapis.services.Abstr
       * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param email
       * @param name
       * @param level
       * @param completion
       * @since 1.13
       */
      protected GetLeaderboard(java.lang.String email, java.lang.String name, java.lang.Long level, java.lang.Long completion) {
        super(Helloworld.this, "GET", REST_PATH, null, com.appspot.englishsharing_1041.helloworld.model.HelloUserCollection.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        this.level = com.google.api.client.util.Preconditions.checkNotNull(level, "Required parameter level must be specified.");
        this.completion = com.google.api.client.util.Preconditions.checkNotNull(completion, "Required parameter completion must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetLeaderboard setAlt(java.lang.String alt) {
        return (GetLeaderboard) super.setAlt(alt);
      }

      @Override
      public GetLeaderboard setFields(java.lang.String fields) {
        return (GetLeaderboard) super.setFields(fields);
      }

      @Override
      public GetLeaderboard setKey(java.lang.String key) {
        return (GetLeaderboard) super.setKey(key);
      }

      @Override
      public GetLeaderboard setOauthToken(java.lang.String oauthToken) {
        return (GetLeaderboard) super.setOauthToken(oauthToken);
      }

      @Override
      public GetLeaderboard setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetLeaderboard) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetLeaderboard setQuotaUser(java.lang.String quotaUser) {
        return (GetLeaderboard) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetLeaderboard setUserIp(java.lang.String userIp) {
        return (GetLeaderboard) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public GetLeaderboard setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public GetLeaderboard setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long level;

      /**

       */
      public java.lang.Long getLevel() {
        return level;
      }

      public GetLeaderboard setLevel(java.lang.Long level) {
        this.level = level;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long completion;

      /**

       */
      public java.lang.Long getCompletion() {
        return completion;
      }

      public GetLeaderboard setCompletion(java.lang.Long completion) {
        this.completion = completion;
        return this;
      }

      @Override
      public GetLeaderboard set(String parameterName, Object value) {
        return (GetLeaderboard) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "greetings.getQuestions".
     *
     * This request holds the parameters needed by the helloworld server.  After setting any optional
     * parameters, call the {@link GetQuestions#execute()} method to invoke the remote operation.
     *
     * @param email
     * @param name
     * @param level
     * @param completion
     * @return the request
     */
    public GetQuestions getQuestions(java.lang.String email, java.lang.String name, java.lang.Long level, java.lang.Long completion) throws java.io.IOException {
      GetQuestions result = new GetQuestions(email, name, level, completion);
      initialize(result);
      return result;
    }

    public class GetQuestions extends HelloworldRequest<com.appspot.englishsharing_1041.helloworld.model.HelloQuestionCollection> {

      private static final String REST_PATH = "get_questions";

      /**
       * Create a request for the method "greetings.getQuestions".
       *
       * This request holds the parameters needed by the the helloworld server.  After setting any
       * optional parameters, call the {@link GetQuestions#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetQuestions#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @param name
       * @param level
       * @param completion
       * @since 1.13
       */
      protected GetQuestions(java.lang.String email, java.lang.String name, java.lang.Long level, java.lang.Long completion) {
        super(Helloworld.this, "GET", REST_PATH, null, com.appspot.englishsharing_1041.helloworld.model.HelloQuestionCollection.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        this.level = com.google.api.client.util.Preconditions.checkNotNull(level, "Required parameter level must be specified.");
        this.completion = com.google.api.client.util.Preconditions.checkNotNull(completion, "Required parameter completion must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetQuestions setAlt(java.lang.String alt) {
        return (GetQuestions) super.setAlt(alt);
      }

      @Override
      public GetQuestions setFields(java.lang.String fields) {
        return (GetQuestions) super.setFields(fields);
      }

      @Override
      public GetQuestions setKey(java.lang.String key) {
        return (GetQuestions) super.setKey(key);
      }

      @Override
      public GetQuestions setOauthToken(java.lang.String oauthToken) {
        return (GetQuestions) super.setOauthToken(oauthToken);
      }

      @Override
      public GetQuestions setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetQuestions) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetQuestions setQuotaUser(java.lang.String quotaUser) {
        return (GetQuestions) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetQuestions setUserIp(java.lang.String userIp) {
        return (GetQuestions) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public GetQuestions setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public GetQuestions setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long level;

      /**

       */
      public java.lang.Long getLevel() {
        return level;
      }

      public GetQuestions setLevel(java.lang.Long level) {
        this.level = level;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long completion;

      /**

       */
      public java.lang.Long getCompletion() {
        return completion;
      }

      public GetQuestions setCompletion(java.lang.Long completion) {
        this.completion = completion;
        return this;
      }

      @Override
      public GetQuestions set(String parameterName, Object value) {
        return (GetQuestions) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "greetings.getVerbs".
     *
     * This request holds the parameters needed by the helloworld server.  After setting any optional
     * parameters, call the {@link GetVerbs#execute()} method to invoke the remote operation.
     *
     * @param email
     * @param name
     * @param level
     * @param completion
     * @return the request
     */
    public GetVerbs getVerbs(java.lang.String email, java.lang.String name, java.lang.Long level, java.lang.Long completion) throws java.io.IOException {
      GetVerbs result = new GetVerbs(email, name, level, completion);
      initialize(result);
      return result;
    }

    public class GetVerbs extends HelloworldRequest<com.appspot.englishsharing_1041.helloworld.model.HelloVerbCollection> {

      private static final String REST_PATH = "get_verbs";

      /**
       * Create a request for the method "greetings.getVerbs".
       *
       * This request holds the parameters needed by the the helloworld server.  After setting any
       * optional parameters, call the {@link GetVerbs#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetVerbs#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param email
       * @param name
       * @param level
       * @param completion
       * @since 1.13
       */
      protected GetVerbs(java.lang.String email, java.lang.String name, java.lang.Long level, java.lang.Long completion) {
        super(Helloworld.this, "GET", REST_PATH, null, com.appspot.englishsharing_1041.helloworld.model.HelloVerbCollection.class);
        this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        this.level = com.google.api.client.util.Preconditions.checkNotNull(level, "Required parameter level must be specified.");
        this.completion = com.google.api.client.util.Preconditions.checkNotNull(completion, "Required parameter completion must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetVerbs setAlt(java.lang.String alt) {
        return (GetVerbs) super.setAlt(alt);
      }

      @Override
      public GetVerbs setFields(java.lang.String fields) {
        return (GetVerbs) super.setFields(fields);
      }

      @Override
      public GetVerbs setKey(java.lang.String key) {
        return (GetVerbs) super.setKey(key);
      }

      @Override
      public GetVerbs setOauthToken(java.lang.String oauthToken) {
        return (GetVerbs) super.setOauthToken(oauthToken);
      }

      @Override
      public GetVerbs setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetVerbs) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetVerbs setQuotaUser(java.lang.String quotaUser) {
        return (GetVerbs) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetVerbs setUserIp(java.lang.String userIp) {
        return (GetVerbs) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public GetVerbs setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public GetVerbs setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long level;

      /**

       */
      public java.lang.Long getLevel() {
        return level;
      }

      public GetVerbs setLevel(java.lang.Long level) {
        this.level = level;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long completion;

      /**

       */
      public java.lang.Long getCompletion() {
        return completion;
      }

      public GetVerbs setCompletion(java.lang.Long completion) {
        this.completion = completion;
        return this;
      }

      @Override
      public GetVerbs set(String parameterName, Object value) {
        return (GetVerbs) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "greetings.listGreeting".
     *
     * This request holds the parameters needed by the helloworld server.  After setting any optional
     * parameters, call the {@link ListGreeting#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public ListGreeting listGreeting() throws java.io.IOException {
      ListGreeting result = new ListGreeting();
      initialize(result);
      return result;
    }

    public class ListGreeting extends HelloworldRequest<com.appspot.englishsharing_1041.helloworld.model.HelloGreetingCollection> {

      private static final String REST_PATH = "hellogreeting";

      /**
       * Create a request for the method "greetings.listGreeting".
       *
       * This request holds the parameters needed by the the helloworld server.  After setting any
       * optional parameters, call the {@link ListGreeting#execute()} method to invoke the remote
       * operation. <p> {@link
       * ListGreeting#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected ListGreeting() {
        super(Helloworld.this, "GET", REST_PATH, null, com.appspot.englishsharing_1041.helloworld.model.HelloGreetingCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListGreeting setAlt(java.lang.String alt) {
        return (ListGreeting) super.setAlt(alt);
      }

      @Override
      public ListGreeting setFields(java.lang.String fields) {
        return (ListGreeting) super.setFields(fields);
      }

      @Override
      public ListGreeting setKey(java.lang.String key) {
        return (ListGreeting) super.setKey(key);
      }

      @Override
      public ListGreeting setOauthToken(java.lang.String oauthToken) {
        return (ListGreeting) super.setOauthToken(oauthToken);
      }

      @Override
      public ListGreeting setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListGreeting) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListGreeting setQuotaUser(java.lang.String quotaUser) {
        return (ListGreeting) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListGreeting setUserIp(java.lang.String userIp) {
        return (ListGreeting) super.setUserIp(userIp);
      }

      @Override
      public ListGreeting set(String parameterName, Object value) {
        return (ListGreeting) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "greetings.multiply".
     *
     * This request holds the parameters needed by the helloworld server.  After setting any optional
     * parameters, call the {@link Multiply#execute()} method to invoke the remote operation.
     *
     * @param times
     * @param content the {@link com.appspot.englishsharing_1041.helloworld.model.HelloGreeting}
     * @return the request
     */
    public Multiply multiply(java.lang.Integer times, com.appspot.englishsharing_1041.helloworld.model.HelloGreeting content) throws java.io.IOException {
      Multiply result = new Multiply(times, content);
      initialize(result);
      return result;
    }

    public class Multiply extends HelloworldRequest<com.appspot.englishsharing_1041.helloworld.model.HelloGreeting> {

      private static final String REST_PATH = "hellogreeting/{times}";

      /**
       * Create a request for the method "greetings.multiply".
       *
       * This request holds the parameters needed by the the helloworld server.  After setting any
       * optional parameters, call the {@link Multiply#execute()} method to invoke the remote operation.
       * <p> {@link
       * Multiply#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param times
       * @param content the {@link com.appspot.englishsharing_1041.helloworld.model.HelloGreeting}
       * @since 1.13
       */
      protected Multiply(java.lang.Integer times, com.appspot.englishsharing_1041.helloworld.model.HelloGreeting content) {
        super(Helloworld.this, "POST", REST_PATH, content, com.appspot.englishsharing_1041.helloworld.model.HelloGreeting.class);
        this.times = com.google.api.client.util.Preconditions.checkNotNull(times, "Required parameter times must be specified.");
      }

      @Override
      public Multiply setAlt(java.lang.String alt) {
        return (Multiply) super.setAlt(alt);
      }

      @Override
      public Multiply setFields(java.lang.String fields) {
        return (Multiply) super.setFields(fields);
      }

      @Override
      public Multiply setKey(java.lang.String key) {
        return (Multiply) super.setKey(key);
      }

      @Override
      public Multiply setOauthToken(java.lang.String oauthToken) {
        return (Multiply) super.setOauthToken(oauthToken);
      }

      @Override
      public Multiply setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Multiply) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Multiply setQuotaUser(java.lang.String quotaUser) {
        return (Multiply) super.setQuotaUser(quotaUser);
      }

      @Override
      public Multiply setUserIp(java.lang.String userIp) {
        return (Multiply) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer times;

      /**

       */
      public java.lang.Integer getTimes() {
        return times;
      }

      public Multiply setTimes(java.lang.Integer times) {
        this.times = times;
        return this;
      }

      @Override
      public Multiply set(String parameterName, Object value) {
        return (Multiply) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Helloworld}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Helloworld}. */
    @Override
    public Helloworld build() {
      return new Helloworld(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link HelloworldRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setHelloworldRequestInitializer(
        HelloworldRequestInitializer helloworldRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(helloworldRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
